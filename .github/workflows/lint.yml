name: Lint

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-lint-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-lint-

    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff mypy

    - name: Run Ruff check (linting and formatting)
      run: |
        cd backend
        ruff check .
        ruff format --check .

    - name: Run MyPy type checker
      run: |
        cd backend
        mypy . --ignore-missing-imports
      continue-on-error: true  # MyPy can be strict, make it non-blocking initially

  lint-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Run ESLint
      run: |
        cd frontend
        npm run lint

    - name: Run TypeScript compiler check
      run: |
        cd frontend
        npx tsc --noEmit